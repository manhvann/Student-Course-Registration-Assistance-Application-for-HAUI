/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.admin;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.FakeData;
import model.HocPhan;
import model.Nganh;
import model.SinhVienTapThe;

/**
 *
 * @author DELL
 */
public class QuanLyNganhTheoKhoa extends javax.swing.JDialog {
    
    List<Nganh> listNganh;
    DefaultTableModel tableModel;
    private String maKhoa;
    private String pathNganh = "src\\data\\Nganh.txt";
    private Nganh nganh;

    /**
     * Creates new form QuanLyNganhTheoKhoa
     */
    public QuanLyNganhTheoKhoa(java.awt.Dialog parent, boolean modal, String maKhoa) {
        super(parent, modal);
        this.maKhoa = maKhoa;
        initComponents();
        this.setTitle("Quản lý ngành");
        tbl_Nganh.setDefaultEditor(Object.class, null);
        viewTable();
        HienThi();
    }
    
    
    public List<Nganh> dsNganhTheoKhoa() {
        listNganh = FakeData.layNganh_Test();
        List<Nganh> nganhs = new ArrayList<>();
        for (Nganh nganh : listNganh) {
            if (nganh.getMaKhoa().equals(maKhoa)) {
                nganhs.add(nganh);
            }
        }
        return nganhs;
    }
    
    public boolean ktraMaTonTai(String maNganh) {
        for (Nganh nganh : listNganh) {
            if (nganh.getMaNganh().equals(maNganh)) {
                return true;
            }
        }
        return false;
    }
    
    public void saveFileNganh() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(pathNganh))) {
            // Ghi dữ liệu vào file
            for (Nganh nganh : listNganh) {
                writer.write(nganh.toString());
                writer.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void HienThi() {
        tbl_Nganh.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (tbl_Nganh.getSelectedRow() >= 0) {
                    txtMaNganh.setText(tbl_Nganh.getValueAt(tbl_Nganh.getSelectedRow(), 0) + "");
                    txtTenNganh.setText(tbl_Nganh.getValueAt(tbl_Nganh.getSelectedRow(), 1) + "");
                }
            }
        });
    }
    
    public Nganh getNganh() {
        return this.nganh;
    }
    
    public void viewTable() {
        DefaultTableModel model = (DefaultTableModel) this.tbl_Nganh.getModel();
        model.setRowCount(0);

        List<Nganh> nganhs = dsNganhTheoKhoa();
        for (Nganh nganh : nganhs) {
            model.addRow(new Object[]{nganh.getMaNganh(),
                nganh.getTenNganh(),
                nganh.getSoLopHP()});
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Nganh = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXem = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        txtMaNganh = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTenNganh = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbl_Nganh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã ngành", "Tên ngành", "Số lớp học phần"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_Nganh);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXem.setText("Xem DS học phần");
        btnXem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemActionPerformed(evt);
            }
        });

        btnExit.setText("Quay lại");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel5.setText("Mã ngành");

        jLabel2.setText("Tên ngành");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMaNganh, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenNganh, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnXem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaNganh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenNganh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnXem)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit)
                        .addGap(68, 68, 68))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.tbl_Nganh.getModel();
        int selectedRow = tbl_Nganh.getSelectedRow();
        try {
            if (selectedRow == -1) {
                throw new Exception();
            } else {
                String maNganh = (String) model.getValueAt(selectedRow, 0);
                // Thống kê số học phần theo học khoa và truyền mã khoa
                QuanLyDSLopHocPhan lopHPTheoNganh = new QuanLyDSLopHocPhan(this, true, maNganh, this.maKhoa);
                lopHPTheoNganh.setVisible(true);
                viewTable();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một ngành để xem chi tiết!");
        }
    }//GEN-LAST:event_btnXemActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String maNganh = txtMaNganh.getText();
        String tenNganh = txtTenNganh.getText();
        if (maNganh.isEmpty() || tenNganh.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (ktraMaTonTai(maNganh)) {
            JOptionPane.showMessageDialog(null, "Mã ngành đã tồn tài trong CSDL!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Object[] kMoi = {maNganh, tenNganh, 0};
        DefaultTableModel model = (DefaultTableModel) tbl_Nganh.getModel();
        model.addRow(kMoi);
        tbl_Nganh.updateUI();
        JOptionPane.showMessageDialog(rootPane, "Thêm thành công!");
        
        this.nganh = new Nganh(maNganh, tenNganh, maKhoa);
        listNganh.add(nganh);
        saveFileNganh();
        viewTable();
        txtMaNganh.setText("");
        txtTenNganh.setText("");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_Nganh.getSelectedRow(); // Lấy dòng được chọn
        try {
            if (selectedRow == -1) { // Kiểm tra xem có dòng nào được chọn không
                throw new Exception();
            } else {
                String maNganh = txtMaNganh.getText();
                String tenNganh = txtTenNganh.getText();
                
                for(Nganh x: listNganh){
                    if(x.getMaNganh().equals(maNganh)){
                        x.setTenNganh(tenNganh);
                        break;
                    }
                }
                tbl_Nganh.setValueAt(maNganh, selectedRow, 0);
                tbl_Nganh.setValueAt(tenNganh, selectedRow, 1);
                saveFileNganh();
                txtMaNganh.setText("");
                txtTenNganh.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dòng để sửa!");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.tbl_Nganh.getModel();
        int selectedRow = tbl_Nganh.getSelectedRow(); // Lấy dòng được chọn

        if (selectedRow == -1) { // Kiểm tra xem có dòng nào được chọn không
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else {
            // Lấy dữ liệu từ dòng được chọn
            String maNganh = model.getValueAt(selectedRow, 0).toString();
            String tenNganh = model.getValueAt(selectedRow, 1).toString();
            if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xoá", "Xác nhận", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                // Xóa dòng dữ liệu từ bảng
                model.removeRow(selectedRow);

                // Xóa dòng dữ liệu từ danh sách
                for (Nganh ng : listNganh) {
                    if (ng.getMaNganh().equals(maNganh) && ng.getTenNganh().equals(tenNganh)) {
                        listNganh.remove(ng);
                        break;
                    }
                }
            }
            saveFileNganh();
            viewTable();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyNganhTheoKhoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyNganhTheoKhoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyNganhTheoKhoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyNganhTheoKhoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                QuanLyNganhTheoKhoa dialog = new QuanLyNganhTheoKhoa(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_Nganh;
    private javax.swing.JTextField txtMaNganh;
    private javax.swing.JTextField txtTenNganh;
    // End of variables declaration//GEN-END:variables
}
